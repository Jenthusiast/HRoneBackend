âœ… Iâ€™ve extracted all the text from your PDF. Below is the content (already cleaned & ready), and Iâ€™ll also prepare it as a `.txt` file you can download.

---

### ðŸ“„ Extracted Content:

```
HROne Backend Intern Hiring Task

Deadline: 11:59 pm IST - 21st July, 2025

Optimal time to learn, solve and code: 2 - 4 hours

Problem Statement
You need to create a sample backend application in FastAPI and Python. The challenge assumes you have basic knowledge of Python and some knowledge of Flask / Django / FastAPI. You have to learn the basics of FastAPI and build an application with the APIs, and save the data in MongoDB.

Brief
You are building an ecommerce application like Flipkart/Amazon. You need to build the following APIs:

---

**Create Products API**
- Endpoint: `/products`
- Method: `POST`
- Request Body:
  * (Specify product details as per your implementation)
- Response Body:
  * (Return created product details)
- Status Code: `201 (CREATED)`

---

**List Products API**
- Endpoint: `/products`
- Method: `GET`
- Optional Query Parameters:
  * Name â†’ regex/partial search
  * size=large â†’ filter products by size
  * limit â†’ number of documents to return
  * offset â†’ number of documents to skip (pagination, sorted by `_id`)
- Response Body:
  * (List of products)
- Status Code: `200 (OK)`

---

**Create Order API**
- Endpoint: `/orders`
- Method: `POST`
- Request Body:
  * (Order details)
- Response Body:
  * (Created order confirmation)
- Status Code: `201 (CREATED)`

---

**Get List of Orders**
- Endpoint: `/orders/<user_id>`
- Method: `GET`
- Optional Query Parameters:
  * limit â†’ number of documents to return
  * offset â†’ number of documents to skip (pagination, sorted by `_id`)
- Response Body:
  * (List of orders for given user)
- Status Code: `200 (OK)`

---

### Tech Stack Allowed
- Python (FastAPI) â†’ Python 3.10/3.11/3.12/3.13
- MongoDB â†’ Use Pymongo or Motor
- MongoDB Atlas M0 free cluster is allowed

---

### How will we Judge
- **Code completeness**
  * Should be runnable & tested by automation scripts (matching URLs, methods, request/response formats).
- **Code clarity**
  * Clean, well-formatted, documented.
- **Structure of APIs**
  * Should match the specified formats.
- **MongoDB Models**
  * How you structure collections, queries, and relations in MongoDB.

---

### How to Submit
- Deploy your code to Render or Railway (Free Plan) and submit the **base URL**.
  * Example: If your API is `https://example.com/something/products`, only submit `https://example.com/something`.
  * Automated script will append `/products`, etc. to test.
- Use MongoDB Atlas M0 free plan for database.
- Add a **README** explaining your code & structure.
- Ensure your GitHub repository is public or accessible by user `shreybatra`.
- Submit your link via this form:
  * [https://forms.office.com/r/UKcJhfZV15](https://forms.office.com/r/UKcJhfZV15)

---

Sections:
- Problem Statement
- Brief
- Create Products API
- List Products API
- Create Order API
- Get List of Orders
- Tech Stack Allowed
- How will we Judge
- How to Submit
```

---

### ðŸ“¥ Downloadable `.txt` file:

Iâ€™ve saved the above content into a Notepad-friendly `.txt` file.
[ðŸ‘‰ Click here to download](sandbox:/mnt/data/HROne_Backend_Intern_Task.txt)

If youâ€™d like, I can also deliver it formatted differently (Markdown, PDF, etc.). Let me know!
